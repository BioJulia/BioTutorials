import{_ as l,c as n,o as e,az as t,j as i,a}from"./chunks/framework.aIw77uuq.js";const E=JSON.parse('{"title":"ðŸ§® Computing GC content","description":"","frontmatter":{},"headers":[],"relativePath":"rosalind/05-gc.md","filePath":"rosalind/05-gc.md","lastUpdated":null}'),p={name:"rosalind/05-gc.md"},h={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},k={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.131ex",height:"1.557ex",role:"img",focusable:"false",viewBox:"0 -666 500 688","aria-hidden":"true"};function o(d,s,r,c,g,u){return e(),n("div",null,[s[20]||(s[20]=t("",18)),i("p",null,[s[2]||(s[2]=a("What's going on here? The definition above tries to count the ")),s[3]||(s[3]=i("code",null,"Char",-1)),s[4]||(s[4]=a("s 'G' and 'C', but when we iterate a ")),s[5]||(s[5]=i("code",null,"LongDNA",-1)),s[6]||(s[6]=a(", we get back nucleotide types. So none of them match, providing a count of ")),i("mjx-container",h,[(e(),n("svg",k,s[0]||(s[0]=[i("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[i("g",{"data-mml-node":"math"},[i("g",{"data-mml-node":"mn"},[i("path",{"data-c":"30",d:"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z",style:{"stroke-width":"3"}})])])],-1)]))),s[1]||(s[1]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("mn",null,"0")])],-1))]),s[7]||(s[7]=a(". We could modify the original function to look also for ")),s[8]||(s[8]=i("code",null,"DNA_C",-1)),s[9]||(s[9]=a(", ")),s[10]||(s[10]=i("code",null,"DNA_G",-1)),s[11]||(s[11]=a(", ")),s[12]||(s[12]=i("code",null,"RNA_C",-1)),s[13]||(s[13]=a(", and ")),s[14]||(s[14]=i("code",null,"RNA_G",-1)),s[15]||(s[15]=a(", or we can use the built-in predicate function ")),s[16]||(s[16]=i("code",null,"isGC()",-1)),s[17]||(s[17]=a(" from BioSequences, which returns ")),s[18]||(s[18]=i("code",null,"true",-1)),s[19]||(s[19]=a(" if it encounters any G or C nucleotide."))]),s[21]||(s[21]=t("",38))])}const y=l(p,[["render",o]]);export{E as __pageData,y as default};
